Seitenanzahl: min 50 nur Inhalt (~70 insgesamt)
Referenzen: 30 (~2 Seiten)

motivation!!!

Frage:
	soll range nochmal in notation table?

IDEAS:
descripte effect of discount factor delta: 0 -> myopic, 1 -> long-term
überblick über scenarien in tabelle
lessons learned
write about refactored example merchants (+inventory)?
more eval for joint pricing/ordering?
platform architecture write about microservices?
mention: profit goal, alternative revenue, min cost etc
write about benchmark tool implementation? (e.g. calls docker-compose)
mention: features only on price, but can be used on quality, rating etc.
abstract: mention joint pricing + ordering
pdf metadata
abstract: add info about phases
abstract: write about speed improvement
annotate platform architecture diagram
martins table
after explanatory variables: discuss its easy to add more variables

CHECK:
consistent use of item/product
merchant: mention run training in background
equations resf in text
mention cpu for performance test
features is function on market situation
order delay == delivery time 'order delivery delay'
gleichzeitige Verkäufe im Graph?
chapters start at odd page

TODO:
table caption
conclusion: lessons learned
intro: paper strucutre

t = 0, ..., T-1
good decision -> suitable decision
intro: zu harter einstieg
compare different parameters in numeric example joint
introduce start value u later in convergence section
check functions in dyn learning evaluation
eval: show resulting expected profit over time; argument for use of start parameter
eval efficiency: fix start value paragraph
improve merchant architecture graph
in section 6 auf merchant impl verweisen
platformerweiterung: misc: neues consumer behavior, vereinheitlichung merchants + order decision, bug fixes
dauer der simulation hinschreiben für Reproduzierbarkeit
mention in twobound vs data-driven: mention max price bound is too low for this situation
mention implementation section when describing merchant sections
consistent: period t, period (t,t+1)
merchant architecture: describe more in caption
platform extension: replace screenshot of inventory chart with download
table speed up dyn progamming: better name for "optimization method" name is ambigeous with profit optimization
inventory transition als formel (see rainers feedback)
dyn programming speedup make results reproducible
joint policies: discuss rechenzeit in numeric example
fix L2 norm
write V, a*, b* with input vec(x)
write P(i, a, s, ß) and x(s, a) -> fix P(i, 30)
platform architecture: do not use bullet point "Kafka Reverse Proxy"?
graph erklärung: balken, punkte
notation table gruppieren
cite upcomming paper
mo 14.5. drucken und abgeben

EVAL:
Graph V_0(n) für verschiedene n -> zeige, dass erwarteter profit kaum von n abhängt
konvergenz zeigen für verschiedene n in V_0(n) ?
show profit after changing pricing/ordering policy -> wie entscheident ist pricing/ordering?
show better start value = faster convergence (but start value independent from n does nothing) (wie viele iterationen für optimale Politik nötig?)

glossary:
item, product, market situation, model vs demand model, decision interval, UI, REST, API, http



3 Kopien
Kuss Babelsberg











README:
UI
marketplace
schreibe über lagerkosten
