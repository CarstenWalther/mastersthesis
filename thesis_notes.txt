Seitenanzahl: min 50 nur Inhalt (~70 insgesamt)
Referenzen: 30 (~2 Seiten)

question:
	how to say b* equation withwithout t? check formula
	what's feedback? (markov stuff)

motivation!!!

IDEAS:
descripte effect of discount factor delta: 0 -> myopic, 1 -> long-term
überblick über scenarien in tabelle
lessons learned
write about refactored example merchants (+inventory)?
sequence diagram for holding cost update
demand learning: show merchant changes price according to inventory level
more eval for joint pricing/ordering?

CHECK:
consistent use of item/product
abrehevation: REST, API, explain somewhere
merchant: mention run training in background
equations resf in text
refs for used libraries
mention cpu for performance test
eigenständigkeitserklärung auf englisch?
features is function on market situation

TODO:
Eval learning
Conclusion
rainer feedback einarbeiten
martin feedback einarbeiten
sonntag/montag stand schreiben
di 11 Uhr treffen
finish Related Work
longer intro (contributions, paper structure)
longer problem description
platform -> deploy not architecture
table of figures fix names
describe consumer in first eval (or gradualy)
use prob function for ordering numeric example instead of explicit values
show better start value = faster convergence (but start value independent from n does nothing) (wie viele iterationen für optimale Politik nötig?)
compare different parameters in numeric example joint

EVAL:
Graph V_0(n) für verschiedene n -> zeige, dass erwarteter profit kaum von n abhängt
konvergenz zeigen für verschiedene n in V_0(n) ?
show profit after changing pricing/ordering policy -> wie entscheident ist pricing/ordering?
demand learning: compare predicted % to real % (price_learning.py)

glossary:
item, product, market situation, model vs demand model, decision interval, UI, REST, API, http















README:
UI
marketplace
schreibe über lagerkosten
